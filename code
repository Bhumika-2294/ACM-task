from flask import Flask, jsonify, request

app = Flask(__name__)

# Sample database (in-memory)
locations = []

# Endpoint to create a new travel location
@app.route('/api/locations', methods=['POST'])
def create_location():
    location = request.get_json()
    locations.append(location)
    return jsonify({'message': 'Location created successfully'}), 201

# Endpoint to get all travel locations
@app.route('/api/locations', methods=['GET'])
def get_locations():
    return jsonify(locations)

# Endpoint to get a specific travel location by ID
@app.route('/api/locations/<int:location_id>', methods=['GET'])
def get_location(location_id):
    if location_id < 0 or location_id >= len(locations):
        return jsonify({'message': 'Location not found'}), 404
    return jsonify(locations[location_id])

# Endpoint to update a travel location by ID
@app.route('/api/locations/<int:location_id>', methods=['PUT'])
def update_location(location_id):
    if location_id < 0 or location_id >= len(locations):
        return jsonify({'message': 'Location not found'}), 404
    new_location = request.get_json()
    locations[location_id] = new_location
    return jsonify({'message': 'Location updated successfully'})

# Endpoint to delete a travel location by ID
@app.route('/api/locations/<int:location_id>', methods=['DELETE'])
def delete_location(location_id):
    if location_id < 0 or location_id >= len(locations):
        return jsonify({'message': 'Location not found'}), 404
    del locations[location_id]
    return jsonify({'message': 'Location deleted successfully'})

if __name__ == '__main__':
    app.run(debug=True)
